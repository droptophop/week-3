@model PizzaStore.Client.Models.PizzaViewModel

@* HTML - creates a form *@
<form action="/order" method="post">
    <h5>Select a crust:</h5>
    @foreach (var crust in @Model.Crusts)
    {
        <input type="radio" name="crust" id="crust" value="@crust.Name" data-val="true" data-val-required="Needed">
        <label for="crust">@crust.Name</label>
    }
    @Html.ValidationMessageFor(m => m.Crust, null, new { @class = "text-danger" })
    <br>
    
    <h5>Select a size:</h5>
    <select name="size" id="">
        @foreach (var size in @Model.Sizes)
        {
            <option value="@size.Name">@size.Name</option>
            @* <input type="radio" name="size" id="size" value="@size.Name" data-val="true" data-val-required="Needed">
            <label for="crust">@size.Name</label> *@
        }
        @Html.ValidationMessageFor(m => m.Size, null, new { @class = "text-danger" })
    </select>
    <br>
    
    <h5>Select your toppings:</h5>
    <select name="topping" id="">
        @foreach (var topping in @Model.Toppings)
        {
            <option value="@topping.Name">@topping.Name</option>
            @* <input type="radio" name="size" id="size" value="@size.Name" data-val="true" data-val-required="Needed">
            <label for="crust">@size.Name</label> *@
        }
        @Html.ValidationMessageFor(m => m.SelectedToppings, null, new { @class = "text-danger" })
    </select>
    <br>

    <button type="submit">Add to Order</button>
</form>

@* html helper - creates a form *@
@* @using(Html.BeginForm("PlaceOrder", "Order", null, FormMethod.Post))
{
    @Html.AntiForgeryToken();
    foreach(var crust in Model.Crusts)
    {
        @Html.RadioButtonFor(m => m.Crust, crust.Name);
        @Html.LabelFor(m => m.Crust);
        @Html.ValidationMessageFor(m => m.Crust);
    }

    foreach(var topping in Model.Toppings)
    {
        @Html.CheckBoxFor(m => m.SelectedTopping, new { name = "SelectedToppings", value = topping });
        @Html.LabelFor(m => m.SelectedTopping);
        @Html.ValidationMessageFor(m => m.SelectedTopping);
    }
    
    @Html.DropDownListFor(m => m.Sizes, new SelectList(Model.Sizes));
    @Html.ValidationMessageFor(m => m.Size);

    <button type="submit">Place Order</button>
} *@